#! @PERL@ -w
# $Id: gmap_setup.pl.in,v 1.28 2005/10/26 04:11:16 twu Exp $

$gmapdb = "@GMAPDB@";
$bindir = "@BINDIR@";
$package_version = "@PACKAGE_VERSION@";

use IO::File;
use Getopt::Std;

# Usage: gmap_setup [-D <path>] -d <db> [-c <coords>] [-o <file>] [-W] [-E] <fasta_files or command>
#
# To make just the full (uncompressed) genome file, can run the program a second time with the -G flag

#undef($opt_9);			# debug
undef($opt_B);			# bindir (needed for "make check")
undef($opt_D);			# destination directory
undef($opt_d);			# genome name
undef($opt_c);			# coords file
undef($opt_o);			# name of output file (default is "Makefile.<genome>")
undef($opt_W);			# write directly to file, not RAM
undef($opt_E);			# interpret argument as a command
undef($opt_P);			# also set up for pmap

getopts("9B:D:d:c:o:WEP");

if (!defined($genome_name = $opt_d)) {
  print_usage();
  die "Must specify genome database name with -d flag.";
} elsif ($opt_d =~ /(\S+)\/(\S+)/) {
  $genome_name = $2;
  if (defined($opt_D)) {
    $opt_D = $opt_D . "/" . $1;
  } else {
    $opt_D = $1;
  }
}

if (!defined($outputfile = $opt_o)) {
  $outputfile = "Makefile.$genome_name";
}
$MAKEFILE = new IO::File(">$outputfile") or die "Cannot write to file $outputfile";

print $MAKEFILE "# Makefile for creating genome $genome_name for use by GMAP.\n";
print $MAKEFILE "# Created by gmap_setup, but may be edited as needed\n\n";
print $MAKEFILE "GENOME = $genome_name\n";

if (defined($opt_D)) {
  print $MAKEFILE "DESTINATION = $opt_D\n";
} else {
  print $MAKEFILE "DESTINATION = $gmapdb/$genome_name\n";
}
print $MAKEFILE "\n";

if (defined($opt_E)) {
  $incommand = $ARGV[0];
} else {
  print $MAKEFILE "FASTA = " . join(" ",@ARGV) . "\n";
  $incommand = "cat \$(FASTA)";
}

if (defined($opt_c)) {
  print $MAKEFILE "COORDS = $opt_c\n";
} else {
  print $MAKEFILE "COORDS = coords.txt\n";
}

if (defined($opt_s)) {
  print $MAKEFILE "REFSTRAIN_NAME = $opt_s\n";
} else {
  print $MAKEFILE "REFSTRAIN_NAME = Reference\n";
}

if (defined($opt_B)) {
  print $MAKEFILE "GMAP_PROCESS = $opt_B/gmap_process\n";
  print $MAKEFILE "GMAPINDEX = $opt_B/gmapindex\n";
  print $MAKEFILE "PMAPINDEX = $opt_B/pmapindex\n";
} else {
  print $MAKEFILE "GMAP_PROCESS = $bindir/gmap_process\n";
  print $MAKEFILE "GMAPINDEX = $bindir/gmapindex\n";
  print $MAKEFILE "PMAPINDEX = $bindir/pmapindex\n";
}
print $MAKEFILE "\n";

print $MAKEFILE "# If WRITEFILE is '-W', then gmapindex will write directly in the file, not in RAM\n";
if (defined($opt_W)) {
  print $MAKEFILE "WRITEFILE = -W\n"
} else {
  print $MAKEFILE "WRITEFILE = \n";
}
print $MAKEFILE "\n";

print $MAKEFILE "GMAPINDEX_INTERVAL = 6 # Change this only for special situations.  Intervals < 6\n";
print $MAKEFILE "                       # may result in large index files that cannot be read on some machines\n";

print $MAKEFILE "PMAPINDEX_INTERVAL = 7 # Change this only for special situations.  Intervals < 7\n";
print $MAKEFILE "                       # may result in large index files that cannot be read on some machines\n";

print $MAKEFILE "\n";


########################################################################
#   General commands
########################################################################

if (defined($opt_P)) {
  print $MAKEFILE "all: gmapfiles pmapfiles\n";
  print $MAKEFILE "full: gmapfiles.full pmapfiles\n";
} else {
  print $MAKEFILE "all: gmapfiles\n";
  print $MAKEFILE "full: gmapfiles.full\n";
}
print $MAKEFILE "\n";

print $MAKEFILE "install:\n";
print $MAKEFILE "\tmkdir -p \$(DESTINATION)\n";
print $MAKEFILE "\tmv -f \$(GENOME).* \$(DESTINATION)\n";
print $MAKEFILE "\tchmod 644 \$(DESTINATION)/\$(GENOME).*\n";
print $MAKEFILE "\n";

print $MAKEFILE "gmapfiles: \$(GENOME).genomecomp \$(GENOME).idxpositions \$(GENOME).version\n";
print $MAKEFILE "gmapfiles.full: gmapfiles.compressed \$(GENOME).genome\n";
print $MAKEFILE "pmapfiles: \$(GENOME).pfxoffsets \$(GENOME).pfxpositions \$(GENOME).prxoffsets \$(GENOME).prxpositions\n";
print $MAKEFILE "\n";

print $MAKEFILE "clean:\n";
print $MAKEFILE "\trm -f $(GENOME).*\n";
print $MAKEFILE "\n";


########################################################################
#   Contig files
########################################################################

if (defined($opt_E)) {
  print $MAKEFILE "\$(GENOME).contig.iit:\n";
} else {
  print $MAKEFILE "\$(GENOME).contig.iit: \$(FASTA)\n";
}
print $MAKEFILE "\techo Making contig files...\n";
print $MAKEFILE "\t$incommand | \$(GMAP_PROCESS) -c \$(COORDS) | \$(GMAPINDEX) -d \$(GENOME) -s \$(REFSTRAIN_NAME) -A\n";
print $MAKEFILE "\n";


########################################################################
#   Genome files
########################################################################

print $MAKEFILE "\$(GENOME).genomecomp: \$(GENOME).contig.iit\n";
print $MAKEFILE "\techo Making compressed genome file...\n";
print $MAKEFILE "\t$incommand | \$(GMAP_PROCESS) -c \$(COORDS) | \$(GMAPINDEX) -d \$(GENOME) \$(WRITEFILE) -G\n";
print $MAKEFILE "\n";


print $MAKEFILE "\$(GENOME).genome: \$(GENOME).contig.iit\n";
print $MAKEFILE "\techo Making full genome file...\n";
print $MAKEFILE "\t$incommand | \$(GMAP_PROCESS) -c \$(COORDS) | \$(GMAPINDEX) -d \$(GENOME) \$(WRITEFILE) -g\n";
print $MAKEFILE "\n";


########################################################################
#   GMAP index files
########################################################################

$flags = "-q \$(GMAPINDEX_INTERVAL)";

print $MAKEFILE "\$(GENOME).idxoffsets: \$(GENOME).genomecomp\n";
print $MAKEFILE "\techo Making index offsets file...\n";
print $MAKEFILE "\tcat \$(GENOME).genomecomp | \$(GMAPINDEX) -d \$(GENOME) $flags -O\n";
print $MAKEFILE "\n";


print $MAKEFILE "\$(GENOME).idxpositions: \$(GENOME).genomecomp \$(GENOME).idxoffsets\n";
print $MAKEFILE "\techo Making index offsets file...\n";
print $MAKEFILE "\tcat \$(GENOME).genomecomp | \$(GMAPINDEX) -d \$(GENOME) $flags -P \$(WRITEFILE)\n";
print $MAKEFILE "\n";


########################################################################
#   PMAP index files
########################################################################

$flags = "-q \$(PMAPINDEX_INTERVAL)";

print $MAKEFILE "\$(GENOME).pfxoffsets: \$(GENOME).genomecomp\n";
print $MAKEFILE "\techo Making forward index offsets file...\n";
print $MAKEFILE "\tcat \$(GENOME).genomecomp | \$(PMAPINDEX) -d \$(GENOME) $flags -O\n";
print $MAKEFILE "\n";

print $MAKEFILE "\$(GENOME).prxoffsets: \$(GENOME).genomecomp\n";
print $MAKEFILE "\techo Making reverse index offsets file...\n";
print $MAKEFILE "\tcat \$(GENOME).genomecomp | \$(PMAPINDEX) -d \$(GENOME) $flags -O -R\n";
print $MAKEFILE "\n";

print $MAKEFILE "\$(GENOME).pfxpositions: \$(GENOME).genomecomp\n";
print $MAKEFILE "\techo Making forward index positions file...\n";
print $MAKEFILE "\tcat \$(GENOME).genomecomp | \$(PMAPINDEX) -d \$(GENOME) $flags -P\n";
print $MAKEFILE "\n";

print $MAKEFILE "\$(GENOME).prxpositions: \$(GENOME).genomecomp\n";
print $MAKEFILE "\techo Making reverse index positions file...\n";
print $MAKEFILE "\tcat \$(GENOME).genomecomp | \$(PMAPINDEX) -d \$(GENOME) $flags -P -R\n";
print $MAKEFILE "\n";


########################################################################
#   Version file
########################################################################

print $MAKEFILE "\$(GENOME).version:\n";
print $MAKEFILE "\techo \$(GENOME) > \$\@\n";
print $MAKEFILE "#\tThis file can be edited manually to change the genome name printed by GMAP\n";
print $MAKEFILE "\n";

close($MAKEFILE);


########################################################################
#   Final instructions
########################################################################

print <<INSTRUCTIONS1;
============================================================
A Makefile has been created for your genome $genome_name.  You may
inspect and edit it if necessary.  To start the build of your genome,
do

INSTRUCTIONS1

if ($outputfile eq "Makefile") {
  print "    make all\n";
  print "    make install\n";
} else {
  print "    make -f $outputfile all\n";
  print "    make -f $outputfile install\n";
}

print <<INSTRUCTIONS2;

Note that the "make all" command can take a while to index a large genome.

If your genome has lower-case or non-standard characters (anything
other than A, C, G, T, N, or X) and you wish to show these characters
in the alignment, you may build a full genome by doing

INSTRUCTIONS2

if ($outputfile eq "Makefile") {
  print "    make $genome_name.genome\n";
} else {
  print "    make -f $outputfile $genome_name.genome\n";
}

print <<INSTRUCTIONS3;

after the "make" command above.  Read the README file in the original
source tree to see if you really need to do this and if your computer
is able to handle the resulting file.
============================================================
INSTRUCTIONS3

exit;



sub print_usage {
  print <<TEXT1;

gmap_setup: Sets up a Makefile for creating a genome by use by GMAP.
Part of GMAP package, version $package_version.

Usage: gmap_setup [-D <path>] -d <db> [-c <coords>] [-o <file>] [-W] [-E] <fasta_files or command>

    -D    destination directory
    -d    genome name
    -c    coords file (default is "coords.txt")
    -o    name of output file (default is "Makefile.<genome>")
    -W    write some output directly to file, instead of using RAM (use only if RAM is limited)
    -E    interpret argument as a command, instead of a list of FASTA files

TEXT1
  return;
}

